using UnityEngine;

/// <summary>
/// –¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –≥–µ—Ä–æ—ó–≤
/// </summary>
public class HeroMovementTester : MonoBehaviour
{
    [Header("–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è")]
    public bool enableTesting = true;
    public KeyCode testKey = KeyCode.T;
    
    [Header("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è")]
    public bool showDebugInfo = true;
    
    void Update()
    {
        if (!enableTesting) return;
        
        if (Input.GetKeyDown(testKey))
        {
            TestHeroMovementSystem();
        }
    }
    
    /// <summary>
    /// –¢–µ—Å—Ç—É—î —Å–∏—Å—Ç–µ–º—É –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –≥–µ—Ä–æ—ó–≤
    /// </summary>
    public void TestHeroMovementSystem()
    {
        Debug.Log("üß™ === –¢–ï–°–¢–£–í–ê–ù–ù–Ø –°–ò–°–¢–ï–ú–ò –ü–ï–†–ï–ú–Ü–©–ï–ù–ù–Ø –ì–ï–†–û–á–í ===");
        
        // –¢–µ—Å—Ç 1: –ü–æ—à—É–∫ –∫–∞—Ä—Ç –¥–ª—è –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è
        TestFindMovementCards();
        
        // –¢–µ—Å—Ç 2: –ü–æ—à—É–∫ –∑–æ–Ω –∑ –≥–µ—Ä–æ—è–º–∏
        TestFindZonesWithHeroes();
        
        // –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è
        TestMovementStates();
        
        Debug.Log("üß™ === –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û ===");
    }
    
    /// <summary>
    /// –¢–µ—Å—Ç—É—î –ø–æ—à—É–∫ –∫–∞—Ä—Ç –¥–ª—è –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è
    /// </summary>
    private void TestFindMovementCards()
    {
        Debug.Log("üîç –¢–µ—Å—Ç 1: –ü–æ—à—É–∫ –∫–∞—Ä—Ç –¥–ª—è –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è");
        
        Card[] allCards = FindObjectsByType<Card>(FindObjectsSortMode.None);
        int movementCards = 0;
        
        foreach (Card card in allCards)
        {
            if (card.IsSelectedForMovement())
            {
                movementCards++;
                Debug.Log($"  ‚úÖ –ö–∞—Ä—Ç–∞ {card.gameObject.name} –≥–æ—Ç–æ–≤–∞ –¥–æ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è");
                Debug.Log($"     –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è: {card.GetMovementInfo()}");
            }
        }
        
        if (movementCards == 0)
        {
            Debug.Log("  ‚ÑπÔ∏è –ö–∞—Ä—Ç –¥–ª—è –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }
        else
        {
            Debug.Log($"  üìä –ó–Ω–∞–π–¥–µ–Ω–æ {movementCards} –∫–∞—Ä—Ç –¥–ª—è –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è");
        }
    }
    
    /// <summary>
    /// –¢–µ—Å—Ç—É—î –ø–æ—à—É–∫ –∑–æ–Ω –∑ –≥–µ—Ä–æ—è–º–∏
    /// </summary>
    private void TestFindZonesWithHeroes()
    {
        Debug.Log("üîç –¢–µ—Å—Ç 2: –ü–æ—à—É–∫ –∑–æ–Ω –∑ –≥–µ—Ä–æ—è–º–∏");
        
        Zone[] allZones = FindObjectsByType<Zone>(FindObjectsSortMode.None);
        int zonesWithHeroes = 0;
        
        foreach (Zone zone in allZones)
        {
            if (zone.HasHero())
            {
                zonesWithHeroes++;
                GameObject hero = zone.GetCurrentHero();
                Debug.Log($"  ‚úÖ –ó–æ–Ω–∞ {zone.name} –∑–∞–π–Ω—è—Ç–∞ –≥–µ—Ä–æ—î–º {hero?.name ?? "–Ω–µ–≤—ñ–¥–æ–º–∏–π"}");
            }
        }
        
        if (zonesWithHeroes == 0)
        {
            Debug.Log("  ‚ÑπÔ∏è –ó–æ–Ω –∑ –≥–µ—Ä–æ—è–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
        }
        else
        {
            Debug.Log($"  üìä –ó–Ω–∞–π–¥–µ–Ω–æ {zonesWithHeroes} –∑–æ–Ω –∑ –≥–µ—Ä–æ—è–º–∏");
        }
    }
    
    /// <summary>
    /// –¢–µ—Å—Ç—É—î —Å—Ç–∞–Ω–∏ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è
    /// </summary>
    private void TestMovementStates()
    {
        Debug.Log("üîç –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—ñ–≤ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è");
        
        Card[] allCards = FindObjectsByType<Card>(FindObjectsSortMode.None);
        
        foreach (Card card in allCards)
        {
            if (card.IsInSlot())
            {
                string status = card.IsSelectedForMovement() ? "–ì–û–¢–û–í–ê –î–û –ü–ï–†–ï–ú–Ü–©–ï–ù–ù–Ø" : "–≤ —Å–ª–æ—Ç—ñ";
                Debug.Log($"  üìã –ö–∞—Ä—Ç–∞ {card.gameObject.name}: {status}");
                
                if (card.IsSelectedForMovement())
                {
                    Debug.Log($"     –î–µ—Ç–∞–ª—ñ: {card.GetMovementInfo()}");
                }
            }
        }
    }
    
    /// <summary>
    /// –ü—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
    /// </summary>
    public void ForceTest()
    {
        TestHeroMovementSystem();
    }
    
    /// <summary>
    /// –ü–æ–∫–∞–∑—É—î –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    /// </summary>
    public void ShowStatistics()
    {
        if (!showDebugInfo) return;
        
        Card[] allCards = FindObjectsByType<Card>(FindObjectsSortMode.None);
        Zone[] allZones = FindObjectsByType<Zone>(FindObjectsSortMode.None);
        
        int cardsInSlots = 0;
        int cardsForMovement = 0;
        int zonesWithHeroes = 0;
        int freeZones = 0;
        
        foreach (Card card in allCards)
        {
            if (card.IsInSlot()) cardsInSlots++;
            if (card.IsSelectedForMovement()) cardsForMovement++;
        }
        
        foreach (Zone zone in allZones)
        {
            if (zone.HasHero()) zonesWithHeroes++;
            else freeZones++;
        }
        
        Debug.Log($"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê: –ö–∞—Ä—Ç–∏ –≤ —Å–ª–æ—Ç–∞—Ö: {cardsInSlots}, –ì–æ—Ç–æ–≤—ñ –¥–æ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è: {cardsForMovement}");
        Debug.Log($"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê: –ó–æ–Ω–∏ –∑ –≥–µ—Ä–æ—è–º–∏: {zonesWithHeroes}, –í—ñ–ª—å–Ω—ñ –∑–æ–Ω–∏: {freeZones}");
    }
    
    void OnGUI()
    {
        if (!showDebugInfo) return;
        
        GUILayout.BeginArea(new Rect(10, 10, 300, 200));
        GUILayout.Label("üß™ Hero Movement Tester", GUI.skin.box);
        
        if (GUILayout.Button("–¢–µ—Å—Ç—É–≤–∞—Ç–∏ —Å–∏—Å—Ç–µ–º—É"))
        {
            TestHeroMovementSystem();
        }
        
        if (GUILayout.Button("–ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"))
        {
            ShowStatistics();
        }
        
        GUILayout.Label($"–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å {testKey} –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è");
        GUILayout.EndArea();
    }
} 