using UnityEngine;
using UnityEngine.UI;

// –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥–µ—Ä–æ—î–º —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
public class HeroController : MonoBehaviour
{
    [Header("UI –∫–Ω–æ–ø–∫–∏")]
    public Button returnToSpawnButton;    // –ö–Ω–æ–ø–∫–∞ 1: –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ —Å–ø–∞–≤–Ω—É
    public Button returnToZoneButton;     // –ö–Ω–æ–ø–∫–∞ 2: –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∑–æ–Ω–∏
    
    [Header("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")]
    public float stopDistance = 0.1f;     // –í—ñ–¥—Å—Ç–∞–Ω—å –∑—É–ø–∏–Ω–∫–∏
    
    // –ü—Ä–∏–≤–∞—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
    private Hero heroComponent;
    private Unit unitComponent;
    private Zone currentZone; // –ü—Ä–∏–≤'—è–∑–∞–Ω–∞ –∑–æ–Ω–∞ (–ø–∞–º'—è—Ç–∞—î—Ç—å—Å—è –Ω–∞–≤—ñ—Ç—å –∫–æ–ª–∏ –≥–µ—Ä–æ–π —É —Å–ø–∞–≤–Ω—ñ)
    private Transform spawnPoint;
    private bool isMoving = false;
    private Vector3 targetPosition;
    private bool isReturningToSpawn = false;
    private float moveSpeed; // –®–≤–∏–¥–∫—ñ—Å—Ç—å —Ä—É—Ö—É –∑ Unit –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    
    // –ù–û–í–ï: –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó UI –æ–±'—î–∫—Ç–∞
    [Header("UI –æ–±'—î–∫—Ç –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó")]
    public GameObject heroControlPanel; // UI –ø–∞–Ω–µ–ª—å –∑ –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥–µ—Ä–æ—î–º
    
    // –°–∏—Å—Ç–µ–º–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
    private bool isReturnToZoneBlocked = false; // –ß–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –∑–æ–Ω—É
    private bool isAutoReturning = false;       // –ß–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –≥–µ—Ä–æ–π

    
    void Start()
    {
        // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
        heroComponent = GetComponent<Hero>();
        unitComponent = GetComponent<Unit>();
        
        // –û—Ç—Ä–∏–º—É—î–º–æ —à–≤–∏–¥–∫—ñ—Å—Ç—å —Ä—É—Ö—É –∑ Unit –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        if (unitComponent != null)
        {
            moveSpeed = unitComponent.moveSpeed;
            Debug.Log($"üèÉ –®–≤–∏–¥–∫—ñ—Å—Ç—å —Ä—É—Ö—É –≥–µ—Ä–æ—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {moveSpeed}");
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è Unit –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É —à–≤–∏–¥–∫—ñ—Å—Ç—å 5");
            moveSpeed = 5f; // –†–µ–∑–µ—Ä–≤–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
        }
        
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ç–æ—á–∫—É —Å–ø–∞–≤–Ω—É
        GameObject spawnObject = GameObject.FindGameObjectWithTag("HeroSpawnPoint");
        if (spawnObject != null)
        {
            spawnPoint = spawnObject.transform;
        }
        
        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏
        SetupButtons();
        
        // –ù–û–í–ï: –°–ø–æ—á–∞—Ç–∫—É –∫–Ω–æ–ø–∫–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ñ - —á–µ–∫–∞—î–º–æ –∫–ª—ñ–∫—É –Ω–∞ –≥–µ—Ä–æ—è
        SetButtonsActive(false);
    }
    
    void Update()
    {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–º—ñ–Ω–∏–ª–∞—Å—è —à–≤–∏–¥–∫—ñ—Å—Ç—å –≤ Unit
        if (unitComponent != null && Mathf.Abs(moveSpeed - unitComponent.moveSpeed) > 0.01f)
        {
            UpdateMoveSpeed();
        }
        
        if (isMoving)
        {
            MoveToTarget();
        }
    }
    
    private void SetupButtons()
    {
        if (returnToSpawnButton != null)
        {
            returnToSpawnButton.onClick.AddListener(ReturnToSpawn);
        }
        
        if (returnToZoneButton != null)
        {
            returnToZoneButton.onClick.AddListener(ReturnToZone);
        }
    }
    
    // –ö–Ω–æ–ø–∫–∞ 1: –ì–µ—Ä–æ–π –±—ñ–∂–∏—Ç—å –¥–æ –∑–æ–Ω–∏ —Å–ø–∞–≤–Ω—É
    public void ReturnToSpawn()
    {
        if (spawnPoint == null)
        {
            Debug.LogWarning("‚ö†Ô∏è –¢–æ—á–∫–∞ —Å–ø–∞–≤–Ω—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!");
            return;
        }
        
        Debug.Log("üèÉ –ì–µ—Ä–æ–π –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –¥–æ —Ç–æ—á–∫–∏ —Å–ø–∞–≤–Ω—É");
        
        // –ù–û–í–ï: –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ UI –ø–∞–Ω–µ–ª—å –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
        DeactivateControlPanel();
        
        // –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å
        StopCurrentActivity();
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ü—ñ–ª—å - —Ç–æ—á–∫–∞ —Å–ø–∞–≤–Ω—É
        targetPosition = spawnPoint.position;
        isReturningToSpawn = true;
        isMoving = true;
        
        // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø—ñ–¥ —á–∞—Å —Ä—É—Ö—É
        SetButtonsActive(false);
        
        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≥–µ—Ä–æ—è –≤–ª—ñ–≤–æ (–¥–æ —Å–ø–∞–≤–Ω—É)
        RotateHeroTowards(spawnPoint.position);
    }
    
    // –ö–Ω–æ–ø–∫–∞ 2: –ì–µ—Ä–æ–π –±—ñ–∂–∏—Ç—å –¥–æ —Å–≤–æ—î—ó –∑–æ–Ω–∏
    public void ReturnToZone()
    {
        // –ù–û–í–ï: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞
        if (isReturnToZoneBlocked)
        {
            Debug.LogWarning("üö´ –ö–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –∑–æ–Ω—É –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞!");
            return;
        }
        
        if (currentZone == null)
        {
            Debug.LogWarning("‚ö†Ô∏è –ì–µ—Ä–æ–π –Ω–µ –ø—Ä–∏–≤'—è–∑–∞–Ω–∏–π –¥–æ –∑–æ–Ω–∏!");
            return;
        }
        
        Debug.Log("üèÉ –ì–µ—Ä–æ–π –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –¥–æ —Å–≤–æ—î—ó –∑–æ–Ω–∏");
        
        // –ù–û–í–ï: –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ UI –ø–∞–Ω–µ–ª—å –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
        DeactivateControlPanel();
        
        // –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å
        StopCurrentActivity();
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ü—ñ–ª—å - –ø–æ—Ç–æ—á–Ω–∞ –∑–æ–Ω–∞
        targetPosition = currentZone.transform.position;
        isReturningToSpawn = false;
        isMoving = true;
        
        // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø—ñ–¥ —á–∞—Å —Ä—É—Ö—É
        SetButtonsActive(false);
        
        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≥–µ—Ä–æ—è –¥–æ –∑–æ–Ω–∏
        RotateHeroTowards(currentZone.transform.position);
    }
    
    private void MoveToTarget()
    {
        if (targetPosition == null) return;
        
        float distance = Vector3.Distance(transform.position, targetPosition);
        
        if (distance <= stopDistance)
        {
            OnReachedTarget();
            return;
        }
        
        // –†—É—Ö–∞—î–º–æ—Å—è –¥–æ —Ü—ñ–ª—ñ
        Vector3 direction = (targetPosition - transform.position).normalized;
        transform.position += direction * moveSpeed * Time.deltaTime;
        
        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å–ø—Ä–∞–π—Ç –≤ –Ω–∞–ø—Ä—è–º–∫—É —Ä—É—Ö—É
        if (direction.x < 0)
        {
            transform.localScale = new Vector3(-1, 1, 1); // –í–ª—ñ–≤–æ
        }
        else if (direction.x > 0)
        {
            transform.localScale = new Vector3(1, 1, 1);  // –í–ø—Ä–∞–≤–æ
        }
    }
    
    private void OnReachedTarget()
    {
        isMoving = false;
        
        if (isReturningToSpawn)
        {
            OnReachedSpawn();
        }
        else
        {
            OnReachedZone();
        }
    }
    
    private void OnReachedSpawn()
    {
        Debug.Log("‚úÖ –ì–µ—Ä–æ–π –¥–æ—Å—è–≥–Ω—É–≤ —Ç–æ—á–∫–∏ —Å–ø–∞–≤–Ω—É");
        
        // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
        isAutoReturning = false;
        
        // –ó–≤—ñ–ª—å–Ω—è—î–º–æ –∑–æ–Ω—É, –∞–ª–µ –ù–ï –≤–∏–¥–∞–ª—è—î–º–æ –≥–µ—Ä–æ—è —ñ –ù–ï –æ—á–∏—â–∞—î–º–æ –ø—Ä–∏–≤'—è–∑–∫—É
        if (currentZone != null)
        {
            currentZone.FreeZoneKeepHero();
        }
        
        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫—É –∫–∞—Ä—Ç–∏, –ø–æ–≤'—è–∑–∞–Ω–æ—ó –∑ —Ü–∏–º –≥–µ—Ä–æ—î–º
        StartCardCooldown();
        
        // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –∑–æ–Ω—É
        UnblockReturnToZone();
        
        // –ù–û–í–ï: –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –¥—ñ—ó
        SetButtonsActive(false);
        
        // –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –¥—ñ—ó
        StopCurrentActivity();
    }
    
    private void OnReachedZone()
    {
        Debug.Log("‚úÖ –ì–µ—Ä–æ–π –¥–æ—Å—è–≥–Ω—É–≤ —Å–≤–æ—î—ó –∑–æ–Ω–∏");
        
        // –°–ø–æ–≤—ñ—â–∞—î–º–æ –∑–æ–Ω—É, —â–æ –≥–µ—Ä–æ–π –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è (–æ–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∏–≤'—è–∑–∫—É)
        if (currentZone != null)
        {
            currentZone.AssignHero(gameObject);
        }
        
        // –ì–µ—Ä–æ–π –º–æ–∂–µ –∑–Ω–æ–≤—É –±–∏—Ç–∏—Å—è
        if (unitComponent != null)
        {
            unitComponent.enabled = true;
        }
        
        // –ù–û–í–ï: –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –¥—ñ—ó
        SetButtonsActive(false);
        
        // –ó—É–ø–∏–Ω—è—î–º–æ —Ä—É—Ö
        StopCurrentActivity();
    }
    
    private void StopCurrentActivity()
    {
        // –ó—É–ø–∏–Ω—è—î–º–æ —Ä—É—Ö
        isMoving = false;
        
        // –ó—É–ø–∏–Ω—è—î–º–æ –∞—Ç–∞–∫–∏
        if (unitComponent != null)
        {
            unitComponent.currentTarget = null;
        }
    }
    
    private void RotateHeroTowards(Vector3 target)
    {
        Vector3 direction = (target - transform.position).normalized;
        
        if (direction.x < 0)
        {
            transform.localScale = new Vector3(-1, 1, 1); // –í–ª—ñ–≤–æ
        }
        else if (direction.x > 0)
        {
            transform.localScale = new Vector3(1, 1, 1);  // –í–ø—Ä–∞–≤–æ
        }
    }
    
    // –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∫–æ–ª–∏ –≥–µ—Ä–æ–π –ø—Ä–∏–≤'—è–∑—É—î—Ç—å—Å—è –¥–æ –∑–æ–Ω–∏
    public void SetCurrentZone(Zone zone)
    {
        currentZone = zone;
        Debug.Log($"üîó –ì–µ—Ä–æ–π {gameObject.name} –ø—Ä–∏–≤'—è–∑–∞–Ω–∏–π –¥–æ –∑–æ–Ω–∏ {zone.name}");
        
        // –ù–û–í–ï: –ö–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤—É—é—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≥–µ—Ä–æ–π –≤–∏–±—Ä–∞–Ω–∏–π –≥—Ä–∞–≤—Ü–µ–º
        if (IsHeroSelected())
        {
            SetButtonsActive(true);
        }
    }
    
    // –ù–û–í–ò–ô –ú–ï–¢–û–î: –ê–∫—Ç–∏–≤—É—î –∫–Ω–æ–ø–∫–∏ –ø—ñ—Å–ª—è –∫–ª—ñ–∫—É –Ω–∞ –≥–µ—Ä–æ—è
    public void ActivateButtonsOnClick()
    {
        Debug.Log($"üéØ –ì–µ—Ä–æ–π {gameObject.name} –≤–∏–±—Ä–∞–Ω–∏–π –≥—Ä–∞–≤—Ü–µ–º - –∞–∫—Ç–∏–≤—É—é –∫–Ω–æ–ø–∫–∏");
        SetButtonsActive(true);
    }
    
    // –ù–û–í–ò–ô –ú–ï–¢–û–î: –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –≥–µ—Ä–æ–π –≤–∏–±—Ä–∞–Ω–∏–π –≥—Ä–∞–≤—Ü–µ–º
    private bool IsHeroSelected()
    {
        return GameManager.GetSelectedHero() == gameObject;
    }
    
    // –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∫–æ–ª–∏ –≥–µ—Ä–æ–π –∑–≤—ñ–ª—å–Ω—è—î—Ç—å—Å—è –∑ –∑–æ–Ω–∏
    public void ClearCurrentZone()
    {
        currentZone = null;
        Debug.Log($"üîì –ì–µ—Ä–æ–π {gameObject.name} –∑–≤—ñ–ª—å–Ω–µ–Ω–∏–π –∑ –∑–æ–Ω–∏");
        
        // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏
        SetButtonsActive(false);
    }
    
    private void SetButtonsActive(bool active)
    {
        if (returnToSpawnButton != null)
        {
            returnToSpawnButton.interactable = active;
        }
        
        if (returnToZoneButton != null)
        {
            // –ö–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –∑–æ–Ω—É –∞–∫—Ç–∏–≤–Ω–∞ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞
            returnToZoneButton.interactable = active && !isReturnToZoneBlocked;
        }
    }
    
    // –ü—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
    public bool IsMoving()
    {
        return isMoving;
    }
    
    public Zone GetCurrentZone()
    {
        return currentZone;
    }
    
    public bool HasZone()
    {
        return currentZone != null;
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ —Ä—É—Ö—É (–≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∫–æ–ª–∏ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≤ Unit)
    public void UpdateMoveSpeed()
    {
        if (unitComponent != null)
        {
            moveSpeed = unitComponent.moveSpeed;
            Debug.Log($"üèÉ –®–≤–∏–¥–∫—ñ—Å—Ç—å —Ä—É—Ö—É –æ–Ω–æ–≤–ª–µ–Ω–∞: {moveSpeed}");
        }
    }
    
    // –ó–∞–ø—É—Å–∫–∞—î –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫—É –∫–∞—Ä—Ç–∏, –ø–æ–≤'—è–∑–∞–Ω–æ—ó –∑ —Ü–∏–º –≥–µ—Ä–æ—î–º
    private void StartCardCooldown()
    {
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –∫–∞—Ä—Ç–∏ —ñ —à—É–∫–∞—î–º–æ —Ç—É, —â–æ –ø–æ–≤'—è–∑–∞–Ω–∞ –∑ —Ü–∏–º –≥–µ—Ä–æ—î–º
        Card[] allCards = FindObjectsByType<Card>(FindObjectsSortMode.None);
        foreach (Card card in allCards)
        {
            if (card.GetLinkedHero() == gameObject)
            {
                card.StartCooldown();
                Debug.Log($"‚è≥ –ó–∞–ø—É—â–µ–Ω–æ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫—É –∫–∞—Ä—Ç–∏ {card.gameObject.name} –¥–ª—è –≥–µ—Ä–æ—è {gameObject.name}");
                break;
            }
        }
    }
    
    // –ü—É–±–ª—ñ—á–Ω–∏–π –≥–µ—Ç—Ç–µ—Ä –¥–ª—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ
    public float GetMoveSpeed()
    {
        return moveSpeed;
    }
    
    // –ù–û–í–Ü –ú–ï–¢–û–î–ò –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û–ì–û –ü–û–í–ï–†–ù–ï–ù–ù–Ø
    
    /// <summary>
    /// –ë–ª–æ–∫—É—î –∫–Ω–æ–ø–∫—É –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –∑–æ–Ω—É
    /// </summary>
    public void BlockReturnToZone()
    {
        isReturnToZoneBlocked = true;
        Debug.Log($"üö´ –ö–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –∑–æ–Ω—É –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞ –¥–ª—è –≥–µ—Ä–æ—è {gameObject.name}");
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫
        UpdateButtonsState();
    }
    
    /// <summary>
    /// –†–æ–∑–±–ª–æ–∫–æ–≤—É—î –∫–Ω–æ–ø–∫—É –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –∑–æ–Ω—É
    /// </summary>
    public void UnblockReturnToZone()
    {
        isReturnToZoneBlocked = false;
        Debug.Log($"‚úÖ –ö–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –∑–æ–Ω—É —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–∞ –¥–ª—è –≥–µ—Ä–æ—è {gameObject.name}");
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫
        UpdateButtonsState();
    }
    
    /// <summary>
    /// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–≤–µ—Ä—Ç–∞—î –≥–µ—Ä–æ—è –¥–æ —Å–ø–∞–≤–Ω—É
    /// </summary>
    public void AutoReturnToSpawn()
    {
        if (isAutoReturning) return;
        
        isAutoReturning = true;
        Debug.Log($"üîÑ –ì–µ—Ä–æ–π {gameObject.name} –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –¥–æ —Å–ø–∞–≤–Ω—É");
        
        // –ù–û–í–ï: –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ UI –ø–∞–Ω–µ–ª—å –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–º—É –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ
        DeactivateControlPanel();
        
        // –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å
        StopCurrentActivity();
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ü—ñ–ª—å - —Ç–æ—á–∫–∞ —Å–ø–∞–≤–Ω—É
        if (spawnPoint != null)
        {
            targetPosition = spawnPoint.position;
            isReturningToSpawn = true;
            isMoving = true;
            
            // –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø—ñ–¥ —á–∞—Å —Ä—É—Ö—É
            SetButtonsActive(false);
            
            // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≥–µ—Ä–æ—è –≤–ª—ñ–≤–æ (–¥–æ —Å–ø–∞–≤–Ω—É)
            RotateHeroTowards(spawnPoint.position);
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è –¢–æ—á–∫–∞ —Å–ø–∞–≤–Ω—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è!");
            isAutoReturning = false;
        }
    }
    
    /// <summary>
    /// –û–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
    /// </summary>
    private void UpdateButtonsState()
    {
        if (returnToZoneButton != null)
        {
            returnToZoneButton.interactable = !isReturnToZoneBlocked && HasZone();
        }
    }
    
    /// <summary>
    /// –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –∑–æ–Ω—É
    /// </summary>
    public bool IsReturnToZoneBlocked()
    {
        return isReturnToZoneBlocked;
    }
    
    /// <summary>
    /// –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –≥–µ—Ä–æ–π
    /// </summary>
    public bool IsAutoReturning()
    {
        return isAutoReturning;
    }
    
    // –ù–û–í–Ü –ú–ï–¢–û–î–ò –î–õ–Ø UI –ü–ê–ù–ï–õ–Ü
    
    /// <summary>
    /// –ê–∫—Ç–∏–≤—É—î UI –ø–∞–Ω–µ–ª—å –ø—ñ—Å–ª—è –∫–ª—ñ–∫—É –Ω–∞ –≥–µ—Ä–æ—è
    /// </summary>
    public void ActivateControlPanel()
    {
        if (heroControlPanel != null)
        {
            heroControlPanel.SetActive(true);
            Debug.Log($"üéØ UI –ø–∞–Ω–µ–ª—å –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞ –¥–ª—è –≥–µ—Ä–æ—è {gameObject.name}");
        }
    }
    
    /// <summary>
    /// –î–µ–∞–∫—Ç–∏–≤—É—î UI –ø–∞–Ω–µ–ª—å –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
    /// </summary>
    public void DeactivateControlPanel()
    {
        if (heroControlPanel != null)
        {
            heroControlPanel.SetActive(false);
            Debug.Log($"üö´ UI –ø–∞–Ω–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∞ –¥–ª—è –≥–µ—Ä–æ—è {gameObject.name}");
        }
    }
    
    void OnDestroy()
    {
        // –û—á–∏—â–∞—î–º–æ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏
        if (returnToSpawnButton != null)
        {
            returnToSpawnButton.onClick.RemoveAllListeners();
        }
        
        if (returnToZoneButton != null)
        {
            returnToZoneButton.onClick.RemoveAllListeners();
        }
    }
} 